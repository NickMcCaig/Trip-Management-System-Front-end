@page "/Event/{Id:guid}/Edit"

@using BackEndAPI
<PageTitle>Index</PageTitle>
@if (MyEvent is not null)
{
    <EditForm Model="@MyEvent" OnValidSubmit="@UpdateEvent">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <p>
            <label>Title</label>
            <input id="Title" @bind-value="MyEvent.Title" />
        </p>
        <p>
            <label>Desc of location</label>
            <input id="LocationDesc" @bind-value="MyEvent.LocationDesc" />
        </p>

        <p>
            <label>Start Date time</label>
            <input id="StartDateTime" @bind-value="MyEvent.StartDateTime" />

        </p>
        <p>
            <label>End Date time</label>
            <input id="EndDateTime" @bind-value="MyEvent.EndDateTime" />
        </p>
        <button class="btn btn-success" type="submit">Submit</button>

    </EditForm>
    <p>Lat: @MyEvent.Lat</p>
    <p>Lng: @MyEvent.Long</p>

    <div>
        @if (weatherForEvent is not null)
        {
            <h1>Weather</h1>
            <p>Max: @weatherForEvent.MaxTemp</p>
            <p>Min: @weatherForEvent.MinTemp</p>
            <p>@weatherForEvent.Desc</p>
        }
        else
        {
            <p>We dont currently know the weather for your event!</p>
        }

    </div>
    <div>
        <button class="btn btn-success" @onclick="() => DeleteEvent()">Delete</button>

    </div>
    @if (errorMessages is not null)
    {
        <div>
            @foreach (var mes in errorMessages)
            {
                <p>@mes</p>
            }
        </div>
    }
}
else
{
    <p>Loading!</p>
}
